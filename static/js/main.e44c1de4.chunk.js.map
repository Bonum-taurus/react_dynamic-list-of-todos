{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","openModal","isOpenedModal","idTodo","className","map","id","title","completed","userId","onClick","type","TodoFilter","onSetFilter","query","onChangeQuery","onChange","event","target","value","trim","placeholder","style","pointerEvents","Loader","TodoModal","user","titleTodo","onRemoveModal","href","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","setIsOpenedModal","setIdTodo","setTitleTodo","setUser","filter","setFilter","setQuery","filtredByQuery","items","item","includes","useEffect","response","onOpenModal","todoId","getUser","person","filt","q","filtredItems","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e44c1de4.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Propse = {\n  todos: Todo[],\n  openModal: (\n    value: boolean, todoId: number, userId: number, title: string) => void,\n  isOpenedModal: boolean\n  idTodo: number\n};\n\nexport const TodoList: React.FC<Propse> = ({\n  todos, openModal, isOpenedModal, idTodo,\n}) => (\n  <table className=\"table is-narrow is-fullw}idth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({\n        id,\n        title,\n        completed,\n        userId,\n      }: Todo) => (\n        <tr key={id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{id}</td>\n          <td className=\"is-vcentered\">\n            {completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={`has-text-${completed ? 'success' : 'danger'}`}>{title}</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              onClick={() => openModal(true, id, userId, title)}\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n            >\n              <span className=\"icon\">\n                <i className={`far fa-eye${idTodo === id && isOpenedModal ? '-slash' : ''}`} />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n      {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  onSetFilter: (filter: string) => void\n  query: string,\n  onChangeQuery: (query: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSetFilter, query, onChangeQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onSetFilter(event.target.value.trim())}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={query}\n        onChange={(event) => onChangeQuery(event.target.value)}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          <button\n            onClick={() => onChangeQuery('')}\n            aria-label={query}\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\n\ntype Propse = {\n  user: User | null,\n  idTodo: number,\n  titleTodo: string,\n  onRemoveModal: (value: boolean) => void\n};\n\nexport const TodoModal: React.FC<Propse> = ({\n  user,\n  idTodo,\n  titleTodo,\n  onRemoveModal,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${idTodo}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onRemoveModal(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {titleTodo}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos, getUser } from './api';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [isOpenedModal, setIsOpenedModal] = useState(false);\n  const [idTodo, setIdTodo] = useState(0);\n  const [titleTodo, setTitleTodo] = useState('');\n  const [user, setUser] = useState<User | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const filtredByQuery = (items: Todo[]) => {\n    return items.filter(item => item.title.includes(query));\n  };\n\n  const filteredTodos = (items: Todo[]) => {\n    if (filter === 'active') {\n      const filtredItems = items.filter(item => !item.completed);\n\n      return filtredByQuery(filtredItems);\n    }\n\n    if (filter === 'completed') {\n      const filtredItems = items.filter(item => item.completed);\n\n      return filtredByQuery(filtredItems);\n    }\n\n    return filtredByQuery(items);\n  };\n\n  useEffect(() => {\n    getTodos().then(response => setTodos(response));\n  }, []);\n\n  const onOpenModal = (\n    value: boolean, todoId: number, userId: number, title: string,\n  ) => {\n    setIsOpenedModal(value);\n    setIdTodo(todoId);\n    setTitleTodo(title);\n\n    getUser(userId).then(person => setUser(person));\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSetFilter={(filt: string) => setFilter(filt)}\n                onChangeQuery={(q) => setQuery(q)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos(todos)}\n                  openModal={(\n                    value: boolean,\n                    todoId: number,\n                    userId: number,\n                    title: string,\n                  ) => onOpenModal(value, todoId, userId, title)}\n                  isOpenedModal={isOpenedModal}\n                  idTodo={idTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isOpenedModal && (\n        <TodoModal\n          user={user}\n          idTodo={idTodo}\n          titleTodo={titleTodo}\n          onRemoveModal={(value) => setIsOpenedModal(value)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}